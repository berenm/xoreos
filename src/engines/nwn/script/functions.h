/* xoreos - A reimplementation of BioWare's Aurora engine
 *
 * xoreos is the legal property of its developers, whose names can be
 * found in the AUTHORS file distributed with this source
 * distribution.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 *
 * The Infinity, Aurora, Odyssey, Eclipse and Lycium engines, Copyright (c) BioWare corp.
 * The Electron engine, Copyright (c) Obsidian Entertainment and BioWare corp.
 */

/** @file engines/nwn/script/functions.h
 *  NWN script functions.
 */

#ifndef ENGINES_NWN_SCRIPT_FUNCTIONS_H
#define ENGINES_NWN_SCRIPT_FUNCTIONS_H

#include "aurora/nwscript/objectcontainer.h"

namespace Aurora {
	namespace NWScript {
		class Variable;
		class Object;
		class FunctionContext;
	}
}

namespace Engines {

namespace NWN {

class Module;
class Area;

class Object;
class Waypoint;
class Situated;
class Door;
class Creature;

class Location;

class ObjectDistanceSort {
public:
	ObjectDistanceSort(const Object &target);

	bool operator()(Object *a, Object *b);

private:
	glm::vec3 tpos;

	float getDistance(Object &a);
};

class ScriptFunctions {
public:
	ScriptFunctions();
	~ScriptFunctions();

	void setModule(Module *module = 0);

private:
	struct Defaults {
		Aurora::NWScript::Variable *int0;
		Aurora::NWScript::Variable *int1;
		Aurora::NWScript::Variable *int100;
		Aurora::NWScript::Variable *int18;
		Aurora::NWScript::Variable *int9;
		Aurora::NWScript::Variable *intm1;
		Aurora::NWScript::Variable *intMale;
		Aurora::NWScript::Variable *intObjectTypeAll;

		Aurora::NWScript::Variable *intACAll;
		Aurora::NWScript::Variable *intACDodge;
		Aurora::NWScript::Variable *intAlignAll;
		Aurora::NWScript::Variable *intAttackMisc;
		Aurora::NWScript::Variable *intCameraSnap;
		Aurora::NWScript::Variable *intClassInvalid;
		Aurora::NWScript::Variable *intCreatureLevel;
		Aurora::NWScript::Variable *intDamageMagical;
		Aurora::NWScript::Variable *intDamageNormal;
		Aurora::NWScript::Variable *intFactionHostile;
		Aurora::NWScript::Variable *intFirstGenericMale;
		Aurora::NWScript::Variable *intIPAmmo;
		Aurora::NWScript::Variable *intMetaMagicAny;
		Aurora::NWScript::Variable *intMissNormal;
		Aurora::NWScript::Variable *intObjectCreature;
		Aurora::NWScript::Variable *intPackageInvalid;
		Aurora::NWScript::Variable *intPersZoneActive;
		Aurora::NWScript::Variable *intProjPathDefault;
		Aurora::NWScript::Variable *intSaveAll;
		Aurora::NWScript::Variable *intSaveNone;
		Aurora::NWScript::Variable *intSpellsGeneral;
		Aurora::NWScript::Variable *intSpellsAll;
		Aurora::NWScript::Variable *intTalk;
		Aurora::NWScript::Variable *intVFXNone;

		Aurora::NWScript::Variable *float0_0;
		Aurora::NWScript::Variable *float1_0;
		Aurora::NWScript::Variable *float2_0;
		Aurora::NWScript::Variable *float30_0;
		Aurora::NWScript::Variable *float40_0;
		Aurora::NWScript::Variable *float180_0;
		Aurora::NWScript::Variable *floatm1_0;

		Aurora::NWScript::Variable *floatMedium;

		Aurora::NWScript::Variable *object0;
		Aurora::NWScript::Variable *stringEmpty;
		Aurora::NWScript::Variable *vector0;

		Defaults();
		~Defaults();
	};

	Module *_module;

	Aurora::NWScript::ObjectContainer::SearchContext _objSearchContext;


	void registerFunctions();
	void registerFunctions000(const Defaults &d);
	void registerFunctions100(const Defaults &d);
	void registerFunctions200(const Defaults &d);
	void registerFunctions300(const Defaults &d);
	void registerFunctions400(const Defaults &d);
	void registerFunctions500(const Defaults &d);
	void registerFunctions600(const Defaults &d);
	void registerFunctions700(const Defaults &d);
	void registerFunctions800(const Defaults &d);

	Common::UString floatToString(float f, int width = 18, int decimals = 9);
	int32 random(int min, int max, int32 n = 1);

	Aurora::NWScript::Object *getPC();

	Common::UString gTag(const Aurora::NWScript::Object *o);

	Module   *convertModule  (Aurora::NWScript::Object *o);
	Area     *convertArea    (Aurora::NWScript::Object *o);
	Object   *convertObject  (Aurora::NWScript::Object *o);
	Waypoint *convertWaypoint(Aurora::NWScript::Object *o);
	Situated *convertSituated(Aurora::NWScript::Object *o);
	Door     *convertDoor    (Aurora::NWScript::Object *o);
	Creature *convertCreature(Aurora::NWScript::Object *o);
	Creature *convertPC      (Aurora::NWScript::Object *o);

	Location *convertLocation(Aurora::NWScript::EngineType *e);

	void jumpTo(Object *object, Area *area, const glm::vec3 &position);

	void random(Aurora::NWScript::FunctionContext &ctx);
	void printString(Aurora::NWScript::FunctionContext &ctx);
	void printFloat(Aurora::NWScript::FunctionContext &ctx);
	void floatToString(Aurora::NWScript::FunctionContext &ctx);
	void printInteger(Aurora::NWScript::FunctionContext &ctx);
	void printObject(Aurora::NWScript::FunctionContext &ctx);
	void assignCommand(Aurora::NWScript::FunctionContext &ctx);
	void delayCommand(Aurora::NWScript::FunctionContext &ctx);
	void executeScript(Aurora::NWScript::FunctionContext &ctx);
	void clearAllActions(Aurora::NWScript::FunctionContext &ctx);
	void setFacing(Aurora::NWScript::FunctionContext &ctx);
	void setCalendar(Aurora::NWScript::FunctionContext &ctx);
	void setTime(Aurora::NWScript::FunctionContext &ctx);
	void getCalendarYear(Aurora::NWScript::FunctionContext &ctx);
	void getCalendarMonth(Aurora::NWScript::FunctionContext &ctx);
	void getCalendarDay(Aurora::NWScript::FunctionContext &ctx);
	void getTimeHour(Aurora::NWScript::FunctionContext &ctx);
	void getTimeMinute(Aurora::NWScript::FunctionContext &ctx);
	void getTimeSecond(Aurora::NWScript::FunctionContext &ctx);
	void getTimeMillisecond(Aurora::NWScript::FunctionContext &ctx);
	void actionRandomWalk(Aurora::NWScript::FunctionContext &ctx);
	void actionMoveToLocation(Aurora::NWScript::FunctionContext &ctx);
	void actionMoveToObject(Aurora::NWScript::FunctionContext &ctx);
	void actionMoveAwayFromObject(Aurora::NWScript::FunctionContext &ctx);
	void getArea(Aurora::NWScript::FunctionContext &ctx);
	void getEnteringObject(Aurora::NWScript::FunctionContext &ctx);
	void getExitingObject(Aurora::NWScript::FunctionContext &ctx);
	void getPosition(Aurora::NWScript::FunctionContext &ctx);
	void getFacing(Aurora::NWScript::FunctionContext &ctx);
	void getItemPossessor(Aurora::NWScript::FunctionContext &ctx);
	void getItemPossessedBy(Aurora::NWScript::FunctionContext &ctx);
	void createItemOnObject(Aurora::NWScript::FunctionContext &ctx);
	void actionEquipItem(Aurora::NWScript::FunctionContext &ctx);
	void actionUnequipItem(Aurora::NWScript::FunctionContext &ctx);
	void actionPickUpItem(Aurora::NWScript::FunctionContext &ctx);
	void actionPutDownItem(Aurora::NWScript::FunctionContext &ctx);
	void getLastAttacker(Aurora::NWScript::FunctionContext &ctx);
	void actionAttack(Aurora::NWScript::FunctionContext &ctx);
	void getNearestCreature(Aurora::NWScript::FunctionContext &ctx);
	void actionSpeakString(Aurora::NWScript::FunctionContext &ctx);
	void actionPlayAnimation(Aurora::NWScript::FunctionContext &ctx);
	void getDistanceToObject(Aurora::NWScript::FunctionContext &ctx);
	void getIsObjectValid(Aurora::NWScript::FunctionContext &ctx);
	void actionOpenDoor(Aurora::NWScript::FunctionContext &ctx);
	void actionCloseDoor(Aurora::NWScript::FunctionContext &ctx);
	void setCameraFacing(Aurora::NWScript::FunctionContext &ctx);
	void playSound(Aurora::NWScript::FunctionContext &ctx);
	void getSpellTargetObject(Aurora::NWScript::FunctionContext &ctx);
	void actionCastSpellAtObject(Aurora::NWScript::FunctionContext &ctx);
	void getCurrentHitPoints(Aurora::NWScript::FunctionContext &ctx);
	void getMaxHitPoints(Aurora::NWScript::FunctionContext &ctx);
	void getLocalInt(Aurora::NWScript::FunctionContext &ctx);
	void getLocalFloat(Aurora::NWScript::FunctionContext &ctx);
	void getLocalString(Aurora::NWScript::FunctionContext &ctx);
	void getLocalObject(Aurora::NWScript::FunctionContext &ctx);
	void setLocalInt(Aurora::NWScript::FunctionContext &ctx);
	void setLocalFloat(Aurora::NWScript::FunctionContext &ctx);
	void setLocalString(Aurora::NWScript::FunctionContext &ctx);
	void setLocalObject(Aurora::NWScript::FunctionContext &ctx);
	void getStringLength(Aurora::NWScript::FunctionContext &ctx);
	void getStringUpperCase(Aurora::NWScript::FunctionContext &ctx);
	void getStringLowerCase(Aurora::NWScript::FunctionContext &ctx);
	void getStringRight(Aurora::NWScript::FunctionContext &ctx);
	void getStringLeft(Aurora::NWScript::FunctionContext &ctx);
	void insertString(Aurora::NWScript::FunctionContext &ctx);
	void getSubString(Aurora::NWScript::FunctionContext &ctx);
	void findSubString(Aurora::NWScript::FunctionContext &ctx);
	void fabs(Aurora::NWScript::FunctionContext &ctx);
	void cos(Aurora::NWScript::FunctionContext &ctx);
	void sin(Aurora::NWScript::FunctionContext &ctx);
	void tan(Aurora::NWScript::FunctionContext &ctx);
	void acos(Aurora::NWScript::FunctionContext &ctx);
	void asin(Aurora::NWScript::FunctionContext &ctx);
	void atan(Aurora::NWScript::FunctionContext &ctx);
	void log(Aurora::NWScript::FunctionContext &ctx);
	void pow(Aurora::NWScript::FunctionContext &ctx);
	void sqrt(Aurora::NWScript::FunctionContext &ctx);
	void abs(Aurora::NWScript::FunctionContext &ctx);
	void effectHeal(Aurora::NWScript::FunctionContext &ctx);
	void effectDamage(Aurora::NWScript::FunctionContext &ctx);
	void effectAbilityIncrease(Aurora::NWScript::FunctionContext &ctx);
	void effectDamageResistance(Aurora::NWScript::FunctionContext &ctx);
	void effectResurrection(Aurora::NWScript::FunctionContext &ctx);
	void effectSummonCreature(Aurora::NWScript::FunctionContext &ctx);
	void getCasterLevel(Aurora::NWScript::FunctionContext &ctx);
	void getFirstEffect(Aurora::NWScript::FunctionContext &ctx);
	void getNextEffect(Aurora::NWScript::FunctionContext &ctx);
	void removeEffect(Aurora::NWScript::FunctionContext &ctx);
	void getIsEffectValid(Aurora::NWScript::FunctionContext &ctx);
	void getEffectDurationType(Aurora::NWScript::FunctionContext &ctx);
	void getEffectSubType(Aurora::NWScript::FunctionContext &ctx);
	void getEffectCreator(Aurora::NWScript::FunctionContext &ctx);
	void intToString(Aurora::NWScript::FunctionContext &ctx);
	void getFirstObjectInArea(Aurora::NWScript::FunctionContext &ctx);
	void getNextObjectInArea(Aurora::NWScript::FunctionContext &ctx);
	void d2(Aurora::NWScript::FunctionContext &ctx);
	void d3(Aurora::NWScript::FunctionContext &ctx);
	void d4(Aurora::NWScript::FunctionContext &ctx);
	void d6(Aurora::NWScript::FunctionContext &ctx);
	void d8(Aurora::NWScript::FunctionContext &ctx);
	void d10(Aurora::NWScript::FunctionContext &ctx);
	void d12(Aurora::NWScript::FunctionContext &ctx);
	void d20(Aurora::NWScript::FunctionContext &ctx);
	void d100(Aurora::NWScript::FunctionContext &ctx);
	void vectorMagnitude(Aurora::NWScript::FunctionContext &ctx);
	void getMetaMagicFeat(Aurora::NWScript::FunctionContext &ctx);
	void getObjectType(Aurora::NWScript::FunctionContext &ctx);
	void getRacialType(Aurora::NWScript::FunctionContext &ctx);
	void fortitudeSave(Aurora::NWScript::FunctionContext &ctx);
	void reflexSave(Aurora::NWScript::FunctionContext &ctx);
	void willSave(Aurora::NWScript::FunctionContext &ctx);
	void getSpellSaveDC(Aurora::NWScript::FunctionContext &ctx);
	void magicalEffect(Aurora::NWScript::FunctionContext &ctx);
	void supernaturalEffect(Aurora::NWScript::FunctionContext &ctx);
	void extraordinaryEffect(Aurora::NWScript::FunctionContext &ctx);
	void effectACIncrease(Aurora::NWScript::FunctionContext &ctx);
	void getAC(Aurora::NWScript::FunctionContext &ctx);
	void effectSavingThrowIncrease(Aurora::NWScript::FunctionContext &ctx);
	void effectAttackIncrease(Aurora::NWScript::FunctionContext &ctx);
	void effectDamageReduction(Aurora::NWScript::FunctionContext &ctx);
	void effectDamageIncrease(Aurora::NWScript::FunctionContext &ctx);
	void roundsToSeconds(Aurora::NWScript::FunctionContext &ctx);
	void hoursToSeconds(Aurora::NWScript::FunctionContext &ctx);
	void turnsToSeconds(Aurora::NWScript::FunctionContext &ctx);
	void getLawChaosValue(Aurora::NWScript::FunctionContext &ctx);
	void getGoodEvilValue(Aurora::NWScript::FunctionContext &ctx);
	void getAlignmentLawChaos(Aurora::NWScript::FunctionContext &ctx);
	void getAlignmentGoodEvil(Aurora::NWScript::FunctionContext &ctx);
	void getFirstObjectInShape(Aurora::NWScript::FunctionContext &ctx);
	void getNextObjectInShape(Aurora::NWScript::FunctionContext &ctx);
	void effectEntangle(Aurora::NWScript::FunctionContext &ctx);
	void signalEvent(Aurora::NWScript::FunctionContext &ctx);
	void eventUserDefined(Aurora::NWScript::FunctionContext &ctx);
	void effectDeath(Aurora::NWScript::FunctionContext &ctx);
	void effectKnockdown(Aurora::NWScript::FunctionContext &ctx);
	void actionGiveItem(Aurora::NWScript::FunctionContext &ctx);
	void actionTakeItem(Aurora::NWScript::FunctionContext &ctx);
	void vectorNormalize(Aurora::NWScript::FunctionContext &ctx);
	void effectCurse(Aurora::NWScript::FunctionContext &ctx);
	void getAbilityScore(Aurora::NWScript::FunctionContext &ctx);
	void getIsDead(Aurora::NWScript::FunctionContext &ctx);
	void printVector(Aurora::NWScript::FunctionContext &ctx);
	void vector(Aurora::NWScript::FunctionContext &ctx);
	void setFacingPoint(Aurora::NWScript::FunctionContext &ctx);
	void angleToVector(Aurora::NWScript::FunctionContext &ctx);
	void vectorToAngle(Aurora::NWScript::FunctionContext &ctx);
	void touchAttackMelee(Aurora::NWScript::FunctionContext &ctx);
	void touchAttackRanged(Aurora::NWScript::FunctionContext &ctx);
	void effectParalyze(Aurora::NWScript::FunctionContext &ctx);
	void effectSpellImmunity(Aurora::NWScript::FunctionContext &ctx);
	void effectDeaf(Aurora::NWScript::FunctionContext &ctx);
	void getDistanceBetween(Aurora::NWScript::FunctionContext &ctx);
	void setLocalLocation(Aurora::NWScript::FunctionContext &ctx);
	void getLocalLocation(Aurora::NWScript::FunctionContext &ctx);
	void effectSleep(Aurora::NWScript::FunctionContext &ctx);
	void getItemInSlot(Aurora::NWScript::FunctionContext &ctx);
	void effectCharmed(Aurora::NWScript::FunctionContext &ctx);
	void effectConfused(Aurora::NWScript::FunctionContext &ctx);
	void effectFrightened(Aurora::NWScript::FunctionContext &ctx);
	void effectDominated(Aurora::NWScript::FunctionContext &ctx);
	void effectDazed(Aurora::NWScript::FunctionContext &ctx);
	void effectStunned(Aurora::NWScript::FunctionContext &ctx);
	void setCommandable(Aurora::NWScript::FunctionContext &ctx);
	void getCommandable(Aurora::NWScript::FunctionContext &ctx);
	void effectRegenerate(Aurora::NWScript::FunctionContext &ctx);
	void effectMovementSpeedIncrease(Aurora::NWScript::FunctionContext &ctx);
	void getHitDice(Aurora::NWScript::FunctionContext &ctx);
	void actionForceFollowObject(Aurora::NWScript::FunctionContext &ctx);
	void getTag(Aurora::NWScript::FunctionContext &ctx);
	void resistSpell(Aurora::NWScript::FunctionContext &ctx);
	void getEffectType(Aurora::NWScript::FunctionContext &ctx);
	void effectAreaOfEffect(Aurora::NWScript::FunctionContext &ctx);
	void getFactionEqual(Aurora::NWScript::FunctionContext &ctx);
	void changeFaction(Aurora::NWScript::FunctionContext &ctx);
	void getIsListening(Aurora::NWScript::FunctionContext &ctx);
	void setListening(Aurora::NWScript::FunctionContext &ctx);
	void setListenPattern(Aurora::NWScript::FunctionContext &ctx);
	void testStringAgainstPattern(Aurora::NWScript::FunctionContext &ctx);
	void getMatchedSubstring(Aurora::NWScript::FunctionContext &ctx);
	void getMatchedSubstringsCount(Aurora::NWScript::FunctionContext &ctx);
	void effectVisualEffect(Aurora::NWScript::FunctionContext &ctx);
	void getFactionWeakestMember(Aurora::NWScript::FunctionContext &ctx);
	void getFactionStrongestMember(Aurora::NWScript::FunctionContext &ctx);
	void getFactionMostDamagedMember(Aurora::NWScript::FunctionContext &ctx);
	void getFactionLeastDamagedMember(Aurora::NWScript::FunctionContext &ctx);
	void getFactionGold(Aurora::NWScript::FunctionContext &ctx);
	void getFactionAverageReputation(Aurora::NWScript::FunctionContext &ctx);
	void getFactionAverageGoodEvilAlignment(Aurora::NWScript::FunctionContext &ctx);
	void getFactionAverageLawChaosAlignment(Aurora::NWScript::FunctionContext &ctx);
	void getFactionAverageLevel(Aurora::NWScript::FunctionContext &ctx);
	void getFactionAverageXP(Aurora::NWScript::FunctionContext &ctx);
	void getFactionMostFrequentClass(Aurora::NWScript::FunctionContext &ctx);
	void getFactionWorstAC(Aurora::NWScript::FunctionContext &ctx);
	void getFactionBestAC(Aurora::NWScript::FunctionContext &ctx);
	void actionSit(Aurora::NWScript::FunctionContext &ctx);
	void getListenPatternNumber(Aurora::NWScript::FunctionContext &ctx);
	void actionJumpToObject(Aurora::NWScript::FunctionContext &ctx);
	void getWaypointByTag(Aurora::NWScript::FunctionContext &ctx);
	void getTransitionTarget(Aurora::NWScript::FunctionContext &ctx);
	void effectLinkEffects(Aurora::NWScript::FunctionContext &ctx);
	void getObjectByTag(Aurora::NWScript::FunctionContext &ctx);
	void adjustAlignment(Aurora::NWScript::FunctionContext &ctx);
	void actionWait(Aurora::NWScript::FunctionContext &ctx);
	void setAreaTransitionBMP(Aurora::NWScript::FunctionContext &ctx);
	void actionStartConversation(Aurora::NWScript::FunctionContext &ctx);
	void actionPauseConversation(Aurora::NWScript::FunctionContext &ctx);
	void actionResumeConversation(Aurora::NWScript::FunctionContext &ctx);
	void effectBeam(Aurora::NWScript::FunctionContext &ctx);
	void getReputation(Aurora::NWScript::FunctionContext &ctx);
	void adjustReputation(Aurora::NWScript::FunctionContext &ctx);
	void getSittingCreature(Aurora::NWScript::FunctionContext &ctx);
	void getGoingToBeAttackedBy(Aurora::NWScript::FunctionContext &ctx);
	void effectSpellResistanceIncrease(Aurora::NWScript::FunctionContext &ctx);
	void getLocation(Aurora::NWScript::FunctionContext &ctx);
	void actionJumpToLocation(Aurora::NWScript::FunctionContext &ctx);
	void location(Aurora::NWScript::FunctionContext &ctx);
	void applyEffectAtLocation(Aurora::NWScript::FunctionContext &ctx);
	void getIsPC(Aurora::NWScript::FunctionContext &ctx);
	void feetToMeters(Aurora::NWScript::FunctionContext &ctx);
	void yardsToMeters(Aurora::NWScript::FunctionContext &ctx);
	void applyEffectToObject(Aurora::NWScript::FunctionContext &ctx);
	void speakString(Aurora::NWScript::FunctionContext &ctx);
	void getSpellTargetLocation(Aurora::NWScript::FunctionContext &ctx);
	void getPositionFromLocation(Aurora::NWScript::FunctionContext &ctx);
	void getAreaFromLocation(Aurora::NWScript::FunctionContext &ctx);
	void getFacingFromLocation(Aurora::NWScript::FunctionContext &ctx);
	void getNearestCreatureToLocation(Aurora::NWScript::FunctionContext &ctx);
	void getNearestObject(Aurora::NWScript::FunctionContext &ctx);
	void getNearestObjectToLocation(Aurora::NWScript::FunctionContext &ctx);
	void getNearestObjectByTag(Aurora::NWScript::FunctionContext &ctx);
	void intToFloat(Aurora::NWScript::FunctionContext &ctx);
	void floatToInt(Aurora::NWScript::FunctionContext &ctx);
	void stringToInt(Aurora::NWScript::FunctionContext &ctx);
	void stringToFloat(Aurora::NWScript::FunctionContext &ctx);
	void actionCastSpellAtLocation(Aurora::NWScript::FunctionContext &ctx);
	void getIsEnemy(Aurora::NWScript::FunctionContext &ctx);
	void getIsFriend(Aurora::NWScript::FunctionContext &ctx);
	void getIsNeutral(Aurora::NWScript::FunctionContext &ctx);
	void getPCSpeaker(Aurora::NWScript::FunctionContext &ctx);
	void getStringByStrRef(Aurora::NWScript::FunctionContext &ctx);
	void actionSpeakStringByStrRef(Aurora::NWScript::FunctionContext &ctx);
	void destroyObject(Aurora::NWScript::FunctionContext &ctx);
	void getModule(Aurora::NWScript::FunctionContext &ctx);
	void createObject(Aurora::NWScript::FunctionContext &ctx);
	void eventSpellCastAt(Aurora::NWScript::FunctionContext &ctx);
	void getLastSpellCaster(Aurora::NWScript::FunctionContext &ctx);
	void getLastSpell(Aurora::NWScript::FunctionContext &ctx);
	void getUserDefinedEventNumber(Aurora::NWScript::FunctionContext &ctx);
	void getSpellId(Aurora::NWScript::FunctionContext &ctx);
	void randomName(Aurora::NWScript::FunctionContext &ctx);
	void effectPoison(Aurora::NWScript::FunctionContext &ctx);
	void effectDisease(Aurora::NWScript::FunctionContext &ctx);
	void effectSilence(Aurora::NWScript::FunctionContext &ctx);
	void getName(Aurora::NWScript::FunctionContext &ctx);
	void getLastSpeaker(Aurora::NWScript::FunctionContext &ctx);
	void beginConversation(Aurora::NWScript::FunctionContext &ctx);
	void getLastPerceived(Aurora::NWScript::FunctionContext &ctx);
	void getLastPerceptionHeard(Aurora::NWScript::FunctionContext &ctx);
	void getLastPerceptionInaudible(Aurora::NWScript::FunctionContext &ctx);
	void getLastPerceptionSeen(Aurora::NWScript::FunctionContext &ctx);
	void getLastClosedBy(Aurora::NWScript::FunctionContext &ctx);
	void getLastPerceptionVanished(Aurora::NWScript::FunctionContext &ctx);
	void getFirstInPersistentObject(Aurora::NWScript::FunctionContext &ctx);
	void getNextInPersistentObject(Aurora::NWScript::FunctionContext &ctx);
	void getAreaOfEffectCreator(Aurora::NWScript::FunctionContext &ctx);
	void deleteLocalInt(Aurora::NWScript::FunctionContext &ctx);
	void deleteLocalFloat(Aurora::NWScript::FunctionContext &ctx);
	void deleteLocalString(Aurora::NWScript::FunctionContext &ctx);
	void deleteLocalObject(Aurora::NWScript::FunctionContext &ctx);
	void deleteLocalLocation(Aurora::NWScript::FunctionContext &ctx);
	void effectHaste(Aurora::NWScript::FunctionContext &ctx);
	void effectSlow(Aurora::NWScript::FunctionContext &ctx);
	void objectToString(Aurora::NWScript::FunctionContext &ctx);
	void effectImmunity(Aurora::NWScript::FunctionContext &ctx);
	void getIsImmune(Aurora::NWScript::FunctionContext &ctx);
	void effectDamageImmunityIncrease(Aurora::NWScript::FunctionContext &ctx);
	void getEncounterActive(Aurora::NWScript::FunctionContext &ctx);
	void setEncounterActive(Aurora::NWScript::FunctionContext &ctx);
	void getEncounterSpawnsMax(Aurora::NWScript::FunctionContext &ctx);
	void setEncounterSpawnsMax(Aurora::NWScript::FunctionContext &ctx);
	void getEncounterSpawnsCurrent(Aurora::NWScript::FunctionContext &ctx);
	void setEncounterSpawnsCurrent(Aurora::NWScript::FunctionContext &ctx);
	void getModuleItemAcquired(Aurora::NWScript::FunctionContext &ctx);
	void getModuleItemAcquiredFrom(Aurora::NWScript::FunctionContext &ctx);
	void setCustomToken(Aurora::NWScript::FunctionContext &ctx);
	void getHasFeat(Aurora::NWScript::FunctionContext &ctx);
	void getHasSkill(Aurora::NWScript::FunctionContext &ctx);
	void actionUseFeat(Aurora::NWScript::FunctionContext &ctx);
	void actionUseSkill(Aurora::NWScript::FunctionContext &ctx);
	void getObjectSeen(Aurora::NWScript::FunctionContext &ctx);
	void getObjectHeard(Aurora::NWScript::FunctionContext &ctx);
	void getLastPlayerDied(Aurora::NWScript::FunctionContext &ctx);
	void getModuleItemLost(Aurora::NWScript::FunctionContext &ctx);
	void getModuleItemLostBy(Aurora::NWScript::FunctionContext &ctx);
	void actionDoCommand(Aurora::NWScript::FunctionContext &ctx);
	void eventConversation(Aurora::NWScript::FunctionContext &ctx);
	void setEncounterDifficulty(Aurora::NWScript::FunctionContext &ctx);
	void getEncounterDifficulty(Aurora::NWScript::FunctionContext &ctx);
	void getDistanceBetweenLocations(Aurora::NWScript::FunctionContext &ctx);
	void getReflexAdjustedDamage(Aurora::NWScript::FunctionContext &ctx);
	void playAnimation(Aurora::NWScript::FunctionContext &ctx);
	void talentSpell(Aurora::NWScript::FunctionContext &ctx);
	void talentFeat(Aurora::NWScript::FunctionContext &ctx);
	void talentSkill(Aurora::NWScript::FunctionContext &ctx);
	void getHasSpellEffect(Aurora::NWScript::FunctionContext &ctx);
	void getEffectSpellId(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureHasTalent(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureTalentRandom(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureTalentBest(Aurora::NWScript::FunctionContext &ctx);
	void actionUseTalentOnObject(Aurora::NWScript::FunctionContext &ctx);
	void actionUseTalentAtLocation(Aurora::NWScript::FunctionContext &ctx);
	void getGoldPieceValue(Aurora::NWScript::FunctionContext &ctx);
	void getIsPlayableRacialType(Aurora::NWScript::FunctionContext &ctx);
	void jumpToLocation(Aurora::NWScript::FunctionContext &ctx);
	void effectTemporaryHitpoints(Aurora::NWScript::FunctionContext &ctx);
	void getSkillRank(Aurora::NWScript::FunctionContext &ctx);
	void getAttackTarget(Aurora::NWScript::FunctionContext &ctx);
	void getLastAttackType(Aurora::NWScript::FunctionContext &ctx);
	void getLastAttackMode(Aurora::NWScript::FunctionContext &ctx);
	void getMaster(Aurora::NWScript::FunctionContext &ctx);
	void getIsInCombat(Aurora::NWScript::FunctionContext &ctx);
	void getLastAssociateCommand(Aurora::NWScript::FunctionContext &ctx);
	void giveGoldToCreature(Aurora::NWScript::FunctionContext &ctx);
	void setIsDestroyable(Aurora::NWScript::FunctionContext &ctx);
	void setLocked(Aurora::NWScript::FunctionContext &ctx);
	void getLocked(Aurora::NWScript::FunctionContext &ctx);
	void getClickingObject(Aurora::NWScript::FunctionContext &ctx);
	void setAssociateListenPatterns(Aurora::NWScript::FunctionContext &ctx);
	void getLastWeaponUsed(Aurora::NWScript::FunctionContext &ctx);
	void actionInteractObject(Aurora::NWScript::FunctionContext &ctx);
	void getLastUsedBy(Aurora::NWScript::FunctionContext &ctx);
	void getAbilityModifier(Aurora::NWScript::FunctionContext &ctx);
	void getIdentified(Aurora::NWScript::FunctionContext &ctx);
	void setIdentified(Aurora::NWScript::FunctionContext &ctx);
	void summonAnimalCompanion(Aurora::NWScript::FunctionContext &ctx);
	void summonFamiliar(Aurora::NWScript::FunctionContext &ctx);
	void getBlockingDoor(Aurora::NWScript::FunctionContext &ctx);
	void getIsDoorActionPossible(Aurora::NWScript::FunctionContext &ctx);
	void doDoorAction(Aurora::NWScript::FunctionContext &ctx);
	void getFirstItemInInventory(Aurora::NWScript::FunctionContext &ctx);
	void getNextItemInInventory(Aurora::NWScript::FunctionContext &ctx);
	void getClassByPosition(Aurora::NWScript::FunctionContext &ctx);
	void getLevelByPosition(Aurora::NWScript::FunctionContext &ctx);
	void getLevelByClass(Aurora::NWScript::FunctionContext &ctx);
	void getDamageDealtByType(Aurora::NWScript::FunctionContext &ctx);
	void getTotalDamageDealt(Aurora::NWScript::FunctionContext &ctx);
	void getLastDamager(Aurora::NWScript::FunctionContext &ctx);
	void getLastDisarmed(Aurora::NWScript::FunctionContext &ctx);
	void getLastDisturbed(Aurora::NWScript::FunctionContext &ctx);
	void getLastLocked(Aurora::NWScript::FunctionContext &ctx);
	void getLastUnlocked(Aurora::NWScript::FunctionContext &ctx);
	void effectSkillIncrease(Aurora::NWScript::FunctionContext &ctx);
	void getInventoryDisturbType(Aurora::NWScript::FunctionContext &ctx);
	void getInventoryDisturbItem(Aurora::NWScript::FunctionContext &ctx);
	void getHenchman(Aurora::NWScript::FunctionContext &ctx);
	void versusAlignmentEffect(Aurora::NWScript::FunctionContext &ctx);
	void versusRacialTypeEffect(Aurora::NWScript::FunctionContext &ctx);
	void versusTrapEffect(Aurora::NWScript::FunctionContext &ctx);
	void getGender(Aurora::NWScript::FunctionContext &ctx);
	void getIsTalentValid(Aurora::NWScript::FunctionContext &ctx);
	void actionMoveAwayFromLocation(Aurora::NWScript::FunctionContext &ctx);
	void getAttemptedAttackTarget(Aurora::NWScript::FunctionContext &ctx);
	void getTypeFromTalent(Aurora::NWScript::FunctionContext &ctx);
	void getIdFromTalent(Aurora::NWScript::FunctionContext &ctx);
	void getAssociate(Aurora::NWScript::FunctionContext &ctx);
	void addHenchman(Aurora::NWScript::FunctionContext &ctx);
	void removeHenchman(Aurora::NWScript::FunctionContext &ctx);
	void addJournalQuestEntry(Aurora::NWScript::FunctionContext &ctx);
	void removeJournalQuestEntry(Aurora::NWScript::FunctionContext &ctx);
	void getPCPublicCDKey(Aurora::NWScript::FunctionContext &ctx);
	void getPCIPAddress(Aurora::NWScript::FunctionContext &ctx);
	void getPCPlayerName(Aurora::NWScript::FunctionContext &ctx);
	void setPCLike(Aurora::NWScript::FunctionContext &ctx);
	void setPCDislike(Aurora::NWScript::FunctionContext &ctx);
	void sendMessageToPC(Aurora::NWScript::FunctionContext &ctx);
	void getAttemptedSpellTarget(Aurora::NWScript::FunctionContext &ctx);
	void getLastOpenedBy(Aurora::NWScript::FunctionContext &ctx);
	void getHasSpell(Aurora::NWScript::FunctionContext &ctx);
	void openStore(Aurora::NWScript::FunctionContext &ctx);
	void effectTurned(Aurora::NWScript::FunctionContext &ctx);
	void getFirstFactionMember(Aurora::NWScript::FunctionContext &ctx);
	void getNextFactionMember(Aurora::NWScript::FunctionContext &ctx);
	void actionForceMoveToLocation(Aurora::NWScript::FunctionContext &ctx);
	void actionForceMoveToObject(Aurora::NWScript::FunctionContext &ctx);
	void getJournalQuestExperience(Aurora::NWScript::FunctionContext &ctx);
	void jumpToObject(Aurora::NWScript::FunctionContext &ctx);
	void setMapPinEnabled(Aurora::NWScript::FunctionContext &ctx);
	void effectHitPointChangeWhenDying(Aurora::NWScript::FunctionContext &ctx);
	void popUpGUIPanel(Aurora::NWScript::FunctionContext &ctx);
	void clearPersonalReputation(Aurora::NWScript::FunctionContext &ctx);
	void setIsTemporaryFriend(Aurora::NWScript::FunctionContext &ctx);
	void setIsTemporaryEnemy(Aurora::NWScript::FunctionContext &ctx);
	void setIsTemporaryNeutral(Aurora::NWScript::FunctionContext &ctx);
	void giveXPToCreature(Aurora::NWScript::FunctionContext &ctx);
	void setXP(Aurora::NWScript::FunctionContext &ctx);
	void getXP(Aurora::NWScript::FunctionContext &ctx);
	void intToHexString(Aurora::NWScript::FunctionContext &ctx);
	void getBaseItemType(Aurora::NWScript::FunctionContext &ctx);
	void getItemHasItemProperty(Aurora::NWScript::FunctionContext &ctx);
	void actionEquipMostDamagingMelee(Aurora::NWScript::FunctionContext &ctx);
	void actionEquipMostDamagingRanged(Aurora::NWScript::FunctionContext &ctx);
	void getItemACValue(Aurora::NWScript::FunctionContext &ctx);
	void actionRest(Aurora::NWScript::FunctionContext &ctx);
	void exploreAreaForPlayer(Aurora::NWScript::FunctionContext &ctx);
	void actionEquipMostEffectiveArmor(Aurora::NWScript::FunctionContext &ctx);
	void getIsDay(Aurora::NWScript::FunctionContext &ctx);
	void getIsNight(Aurora::NWScript::FunctionContext &ctx);
	void getIsDawn(Aurora::NWScript::FunctionContext &ctx);
	void getIsDusk(Aurora::NWScript::FunctionContext &ctx);
	void getIsEncounterCreature(Aurora::NWScript::FunctionContext &ctx);
	void getLastPlayerDying(Aurora::NWScript::FunctionContext &ctx);
	void getStartingLocation(Aurora::NWScript::FunctionContext &ctx);
	void changeToStandardFaction(Aurora::NWScript::FunctionContext &ctx);
	void soundObjectPlay(Aurora::NWScript::FunctionContext &ctx);
	void soundObjectStop(Aurora::NWScript::FunctionContext &ctx);
	void soundObjectSetVolume(Aurora::NWScript::FunctionContext &ctx);
	void soundObjectSetPosition(Aurora::NWScript::FunctionContext &ctx);
	void speakOneLinerConversation(Aurora::NWScript::FunctionContext &ctx);
	void getGold(Aurora::NWScript::FunctionContext &ctx);
	void getLastRespawnButtonPresser(Aurora::NWScript::FunctionContext &ctx);
	void getIsDM(Aurora::NWScript::FunctionContext &ctx);
	void playVoiceChat(Aurora::NWScript::FunctionContext &ctx);
	void getIsWeaponEffective(Aurora::NWScript::FunctionContext &ctx);
	void getLastSpellHarmful(Aurora::NWScript::FunctionContext &ctx);
	void eventActivateItem(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundPlay(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundStop(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundSetDelay(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundChangeDay(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundChangeNight(Aurora::NWScript::FunctionContext &ctx);
	void musicBattlePlay(Aurora::NWScript::FunctionContext &ctx);
	void musicBattleStop(Aurora::NWScript::FunctionContext &ctx);
	void musicBattleChange(Aurora::NWScript::FunctionContext &ctx);
	void ambientSoundPlay(Aurora::NWScript::FunctionContext &ctx);
	void ambientSoundStop(Aurora::NWScript::FunctionContext &ctx);
	void ambientSoundChangeDay(Aurora::NWScript::FunctionContext &ctx);
	void ambientSoundChangeNight(Aurora::NWScript::FunctionContext &ctx);
	void getLastKiller(Aurora::NWScript::FunctionContext &ctx);
	void getSpellCastItem(Aurora::NWScript::FunctionContext &ctx);
	void getItemActivated(Aurora::NWScript::FunctionContext &ctx);
	void getItemActivator(Aurora::NWScript::FunctionContext &ctx);
	void getItemActivatedTargetLocation(Aurora::NWScript::FunctionContext &ctx);
	void getItemActivatedTarget(Aurora::NWScript::FunctionContext &ctx);
	void getIsOpen(Aurora::NWScript::FunctionContext &ctx);
	void takeGoldFromCreature(Aurora::NWScript::FunctionContext &ctx);
	void isInConversation(Aurora::NWScript::FunctionContext &ctx);
	void effectAbilityDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectAttackDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectDamageDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectDamageImmunityDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectACDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectMovementSpeedDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectSavingThrowDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectSkillDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectSpellResistanceDecrease(Aurora::NWScript::FunctionContext &ctx);
	void getPlotFlag(Aurora::NWScript::FunctionContext &ctx);
	void setPlotFlag(Aurora::NWScript::FunctionContext &ctx);
	void effectInvisibility(Aurora::NWScript::FunctionContext &ctx);
	void effectConcealment(Aurora::NWScript::FunctionContext &ctx);
	void effectDarkness(Aurora::NWScript::FunctionContext &ctx);
	void effectDispelMagicAll(Aurora::NWScript::FunctionContext &ctx);
	void effectUltravision(Aurora::NWScript::FunctionContext &ctx);
	void effectNegativeLevel(Aurora::NWScript::FunctionContext &ctx);
	void effectPolymorph(Aurora::NWScript::FunctionContext &ctx);
	void effectSanctuary(Aurora::NWScript::FunctionContext &ctx);
	void effectTrueSeeing(Aurora::NWScript::FunctionContext &ctx);
	void effectSeeInvisible(Aurora::NWScript::FunctionContext &ctx);
	void effectTimeStop(Aurora::NWScript::FunctionContext &ctx);
	void effectBlindness(Aurora::NWScript::FunctionContext &ctx);
	void getIsReactionTypeFriendly(Aurora::NWScript::FunctionContext &ctx);
	void getIsReactionTypeNeutral(Aurora::NWScript::FunctionContext &ctx);
	void getIsReactionTypeHostile(Aurora::NWScript::FunctionContext &ctx);
	void effectSpellLevelAbsorption(Aurora::NWScript::FunctionContext &ctx);
	void effectDispelMagicBest(Aurora::NWScript::FunctionContext &ctx);
	void activatePortal(Aurora::NWScript::FunctionContext &ctx);
	void getNumStackedItems(Aurora::NWScript::FunctionContext &ctx);
	void surrenderToEnemies(Aurora::NWScript::FunctionContext &ctx);
	void effectMissChance(Aurora::NWScript::FunctionContext &ctx);
	void getTurnResistanceHD(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureSize(Aurora::NWScript::FunctionContext &ctx);
	void effectDisappearAppear(Aurora::NWScript::FunctionContext &ctx);
	void effectDisappear(Aurora::NWScript::FunctionContext &ctx);
	void effectAppear(Aurora::NWScript::FunctionContext &ctx);
	void actionUnlockObject(Aurora::NWScript::FunctionContext &ctx);
	void actionLockObject(Aurora::NWScript::FunctionContext &ctx);
	void effectModifyAttacks(Aurora::NWScript::FunctionContext &ctx);
	void getLastTrapDetected(Aurora::NWScript::FunctionContext &ctx);
	void effectDamageShield(Aurora::NWScript::FunctionContext &ctx);
	void getNearestTrapToObject(Aurora::NWScript::FunctionContext &ctx);
	void getDeity(Aurora::NWScript::FunctionContext &ctx);
	void getSubRace(Aurora::NWScript::FunctionContext &ctx);
	void getFortitudeSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void getWillSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void getReflexSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void getChallengeRating(Aurora::NWScript::FunctionContext &ctx);
	void getAge(Aurora::NWScript::FunctionContext &ctx);
	void getMovementRate(Aurora::NWScript::FunctionContext &ctx);
	void getFamiliarCreatureType(Aurora::NWScript::FunctionContext &ctx);
	void getAnimalCompanionCreatureType(Aurora::NWScript::FunctionContext &ctx);
	void getFamiliarName(Aurora::NWScript::FunctionContext &ctx);
	void getAnimalCompanionName(Aurora::NWScript::FunctionContext &ctx);
	void actionCastFakeSpellAtObject(Aurora::NWScript::FunctionContext &ctx);
	void actionCastFakeSpellAtLocation(Aurora::NWScript::FunctionContext &ctx);
	void removeSummonedAssociate(Aurora::NWScript::FunctionContext &ctx);
	void setCameraMode(Aurora::NWScript::FunctionContext &ctx);
	void getIsResting(Aurora::NWScript::FunctionContext &ctx);
	void getLastPCRested(Aurora::NWScript::FunctionContext &ctx);
	void setWeather(Aurora::NWScript::FunctionContext &ctx);
	void getLastRestEventType(Aurora::NWScript::FunctionContext &ctx);
	void startNewModule(Aurora::NWScript::FunctionContext &ctx);
	void effectSwarm(Aurora::NWScript::FunctionContext &ctx);
	void getWeaponRanged(Aurora::NWScript::FunctionContext &ctx);
	void doSinglePlayerAutoSave(Aurora::NWScript::FunctionContext &ctx);
	void getGameDifficulty(Aurora::NWScript::FunctionContext &ctx);
	void setTileMainLightColor(Aurora::NWScript::FunctionContext &ctx);
	void setTileSourceLightColor(Aurora::NWScript::FunctionContext &ctx);
	void recomputeStaticLighting(Aurora::NWScript::FunctionContext &ctx);
	void getTileMainLight1Color(Aurora::NWScript::FunctionContext &ctx);
	void getTileMainLight2Color(Aurora::NWScript::FunctionContext &ctx);
	void getTileSourceLight1Color(Aurora::NWScript::FunctionContext &ctx);
	void getTileSourceLight2Color(Aurora::NWScript::FunctionContext &ctx);
	void setPanelButtonFlash(Aurora::NWScript::FunctionContext &ctx);
	void getCurrentAction(Aurora::NWScript::FunctionContext &ctx);
	void setStandardFactionReputation(Aurora::NWScript::FunctionContext &ctx);
	void getStandardFactionReputation(Aurora::NWScript::FunctionContext &ctx);
	void floatingTextStrRefOnCreature(Aurora::NWScript::FunctionContext &ctx);
	void floatingTextStringOnCreature(Aurora::NWScript::FunctionContext &ctx);
	void getTrapDisarmable(Aurora::NWScript::FunctionContext &ctx);
	void getTrapDetectable(Aurora::NWScript::FunctionContext &ctx);
	void getTrapDetectedBy(Aurora::NWScript::FunctionContext &ctx);
	void getTrapFlagged(Aurora::NWScript::FunctionContext &ctx);
	void getTrapBaseType(Aurora::NWScript::FunctionContext &ctx);
	void getTrapOneShot(Aurora::NWScript::FunctionContext &ctx);
	void getTrapCreator(Aurora::NWScript::FunctionContext &ctx);
	void getTrapKeyTag(Aurora::NWScript::FunctionContext &ctx);
	void getTrapDisarmDC(Aurora::NWScript::FunctionContext &ctx);
	void getTrapDetectDC(Aurora::NWScript::FunctionContext &ctx);
	void getLockKeyRequired(Aurora::NWScript::FunctionContext &ctx);
	void getLockKeyTag(Aurora::NWScript::FunctionContext &ctx);
	void getLockLockable(Aurora::NWScript::FunctionContext &ctx);
	void getLockUnlockDC(Aurora::NWScript::FunctionContext &ctx);
	void getLockLockDC(Aurora::NWScript::FunctionContext &ctx);
	void getPCLevellingUp(Aurora::NWScript::FunctionContext &ctx);
	void getHasFeatEffect(Aurora::NWScript::FunctionContext &ctx);
	void setPlaceableIllumination(Aurora::NWScript::FunctionContext &ctx);
	void getPlaceableIllumination(Aurora::NWScript::FunctionContext &ctx);
	void getIsPlaceableObjectActionPossible(Aurora::NWScript::FunctionContext &ctx);
	void doPlaceableObjectAction(Aurora::NWScript::FunctionContext &ctx);
	void getFirstPC(Aurora::NWScript::FunctionContext &ctx);
	void getNextPC(Aurora::NWScript::FunctionContext &ctx);
	void setTrapDetectedBy(Aurora::NWScript::FunctionContext &ctx);
	void getIsTrapped(Aurora::NWScript::FunctionContext &ctx);
	void effectTurnResistanceDecrease(Aurora::NWScript::FunctionContext &ctx);
	void effectTurnResistanceIncrease(Aurora::NWScript::FunctionContext &ctx);
	void popUpDeathGUIPanel(Aurora::NWScript::FunctionContext &ctx);
	void setTrapDisabled(Aurora::NWScript::FunctionContext &ctx);
	void getLastHostileActor(Aurora::NWScript::FunctionContext &ctx);
	void exportAllCharacters(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundGetDayTrack(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundGetNightTrack(Aurora::NWScript::FunctionContext &ctx);
	void writeTimestampedLogEntry(Aurora::NWScript::FunctionContext &ctx);
	void getModuleName(Aurora::NWScript::FunctionContext &ctx);
	void getFactionLeader(Aurora::NWScript::FunctionContext &ctx);
	void sendMessageToAllDMs(Aurora::NWScript::FunctionContext &ctx);
	void endGame(Aurora::NWScript::FunctionContext &ctx);
	void bootPC(Aurora::NWScript::FunctionContext &ctx);
	void actionCounterSpell(Aurora::NWScript::FunctionContext &ctx);
	void ambientSoundSetDayVolume(Aurora::NWScript::FunctionContext &ctx);
	void ambientSoundSetNightVolume(Aurora::NWScript::FunctionContext &ctx);
	void musicBackgroundGetBattleTrack(Aurora::NWScript::FunctionContext &ctx);
	void getHasInventory(Aurora::NWScript::FunctionContext &ctx);
	void getStrRefSoundDuration(Aurora::NWScript::FunctionContext &ctx);
	void addToParty(Aurora::NWScript::FunctionContext &ctx);
	void removeFromParty(Aurora::NWScript::FunctionContext &ctx);
	void getStealthMode(Aurora::NWScript::FunctionContext &ctx);
	void getDetectMode(Aurora::NWScript::FunctionContext &ctx);
	void getDefensiveCastingMode(Aurora::NWScript::FunctionContext &ctx);
	void getAppearanceType(Aurora::NWScript::FunctionContext &ctx);
	void spawnScriptDebugger(Aurora::NWScript::FunctionContext &ctx);
	void getModuleItemAcquiredStackSize(Aurora::NWScript::FunctionContext &ctx);
	void decrementRemainingFeatUses(Aurora::NWScript::FunctionContext &ctx);
	void decrementRemainingSpellUses(Aurora::NWScript::FunctionContext &ctx);
	void getResRef(Aurora::NWScript::FunctionContext &ctx);
	void effectPetrify(Aurora::NWScript::FunctionContext &ctx);
	void copyItem(Aurora::NWScript::FunctionContext &ctx);
	void effectCutsceneParalyze(Aurora::NWScript::FunctionContext &ctx);
	void getDroppableFlag(Aurora::NWScript::FunctionContext &ctx);
	void getUseableFlag(Aurora::NWScript::FunctionContext &ctx);
	void getStolenFlag(Aurora::NWScript::FunctionContext &ctx);
	void setCampaignFloat(Aurora::NWScript::FunctionContext &ctx);
	void setCampaignInt(Aurora::NWScript::FunctionContext &ctx);
	void setCampaignVector(Aurora::NWScript::FunctionContext &ctx);
	void setCampaignLocation(Aurora::NWScript::FunctionContext &ctx);
	void setCampaignString(Aurora::NWScript::FunctionContext &ctx);
	void destroyCampaignDatabase(Aurora::NWScript::FunctionContext &ctx);
	void getCampaignFloat(Aurora::NWScript::FunctionContext &ctx);
	void getCampaignInt(Aurora::NWScript::FunctionContext &ctx);
	void getCampaignVector(Aurora::NWScript::FunctionContext &ctx);
	void getCampaignLocation(Aurora::NWScript::FunctionContext &ctx);
	void getCampaignString(Aurora::NWScript::FunctionContext &ctx);
	void copyObject(Aurora::NWScript::FunctionContext &ctx);
	void deleteCampaignVariable(Aurora::NWScript::FunctionContext &ctx);
	void storeCampaignObject(Aurora::NWScript::FunctionContext &ctx);
	void retrieveCampaignObject(Aurora::NWScript::FunctionContext &ctx);
	void effectCutsceneDominated(Aurora::NWScript::FunctionContext &ctx);
	void getItemStackSize(Aurora::NWScript::FunctionContext &ctx);
	void setItemStackSize(Aurora::NWScript::FunctionContext &ctx);
	void getItemCharges(Aurora::NWScript::FunctionContext &ctx);
	void setItemCharges(Aurora::NWScript::FunctionContext &ctx);
	void addItemProperty(Aurora::NWScript::FunctionContext &ctx);
	void removeItemProperty(Aurora::NWScript::FunctionContext &ctx);
	void getIsItemPropertyValid(Aurora::NWScript::FunctionContext &ctx);
	void getFirstItemProperty(Aurora::NWScript::FunctionContext &ctx);
	void getNextItemProperty(Aurora::NWScript::FunctionContext &ctx);
	void getItemPropertyType(Aurora::NWScript::FunctionContext &ctx);
	void getItemPropertyDurationType(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyAbilityBonus(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyACBonus(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyACBonusVsAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyACBonusVsDmgType(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyACBonusVsRace(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyACBonusVsSAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyEnhancementBonus(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyEnhancementBonusVsAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyEnhancementBonusVsRace(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyEnhancementBonusVsSAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyEnhancementPenalty(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyWeightReduction(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyBonusFeat(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyBonusLevelSpell(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyCastSpell(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageBonus(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageBonusVsAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageBonusVsRace(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageBonusVsSAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageImmunity(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamagePenalty(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageReduction(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageResistance(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDamageVulnerability(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDarkvision(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDecreaseAbility(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDecreaseAC(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyDecreaseSkill(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyContainerReducedWeight(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyExtraMeleeDamageType(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyExtraRangeDamageType(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyHaste(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyHolyAvenger(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyImmunityMisc(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyImprovedEvasion(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyBonusSpellResistance(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyBonusSavingThrowVsX(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyBonusSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyKeen(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyLight(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyMaxRangeStrengthMod(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyNoDamage(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyOnHitProps(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyReducedSavingThrowVsX(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyReducedSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyRegeneration(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertySkillBonus(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertySpellImmunitySpecific(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertySpellImmunitySchool(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyThievesTools(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyAttackBonus(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyAttackBonusVsAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyAttackBonusVsRace(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyAttackBonusVsSAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyAttackPenalty(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyUnlimitedAmmo(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyLimitUseByAlign(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyLimitUseByClass(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyLimitUseByRace(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyLimitUseBySAlign(Aurora::NWScript::FunctionContext &ctx);
	void badBadReplaceMeThisDoesNothing(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyVampiricRegeneration(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyTrap(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyTrueSeeing(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyOnMonsterHitProperties(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyTurnResistance(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyMassiveCritical(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyFreeAction(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyMonsterDamage(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyImmunityToSpellLevel(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertySpecialWalk(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyHealersKit(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyWeightIncrease(Aurora::NWScript::FunctionContext &ctx);
	void getIsSkillSuccessful(Aurora::NWScript::FunctionContext &ctx);
	void effectSpellFailure(Aurora::NWScript::FunctionContext &ctx);
	void speakStringByStrRef(Aurora::NWScript::FunctionContext &ctx);
	void setCutsceneMode(Aurora::NWScript::FunctionContext &ctx);
	void getLastPCToCancelCutscene(Aurora::NWScript::FunctionContext &ctx);
	void getDialogSoundLength(Aurora::NWScript::FunctionContext &ctx);
	void fadeFromBlack(Aurora::NWScript::FunctionContext &ctx);
	void fadeToBlack(Aurora::NWScript::FunctionContext &ctx);
	void stopFade(Aurora::NWScript::FunctionContext &ctx);
	void blackScreen(Aurora::NWScript::FunctionContext &ctx);
	void getBaseAttackBonus(Aurora::NWScript::FunctionContext &ctx);
	void setImmortal(Aurora::NWScript::FunctionContext &ctx);
	void openInventory(Aurora::NWScript::FunctionContext &ctx);
	void storeCameraFacing(Aurora::NWScript::FunctionContext &ctx);
	void restoreCameraFacing(Aurora::NWScript::FunctionContext &ctx);
	void levelUpHenchman(Aurora::NWScript::FunctionContext &ctx);
	void setDroppableFlag(Aurora::NWScript::FunctionContext &ctx);
	void getWeight(Aurora::NWScript::FunctionContext &ctx);
	void getModuleItemAcquiredBy(Aurora::NWScript::FunctionContext &ctx);
	void getImmortal(Aurora::NWScript::FunctionContext &ctx);
	void doWhirlwindAttack(Aurora::NWScript::FunctionContext &ctx);
	void get2DAString(Aurora::NWScript::FunctionContext &ctx);
	void effectEthereal(Aurora::NWScript::FunctionContext &ctx);
	void getAILevel(Aurora::NWScript::FunctionContext &ctx);
	void setAILevel(Aurora::NWScript::FunctionContext &ctx);
	void getIsPossessedFamiliar(Aurora::NWScript::FunctionContext &ctx);
	void unpossessFamiliar(Aurora::NWScript::FunctionContext &ctx);
	void getIsAreaInterior(Aurora::NWScript::FunctionContext &ctx);
	void sendMessageToPCByStrRef(Aurora::NWScript::FunctionContext &ctx);
	void incrementRemainingFeatUses(Aurora::NWScript::FunctionContext &ctx);
	void exportSingleCharacter(Aurora::NWScript::FunctionContext &ctx);
	void playSoundByStrRef(Aurora::NWScript::FunctionContext &ctx);
	void setSubRace(Aurora::NWScript::FunctionContext &ctx);
	void setDeity(Aurora::NWScript::FunctionContext &ctx);
	void getIsDMPossessed(Aurora::NWScript::FunctionContext &ctx);
	void getWeather(Aurora::NWScript::FunctionContext &ctx);
	void getIsAreaNatural(Aurora::NWScript::FunctionContext &ctx);
	void getIsAreaAboveGround(Aurora::NWScript::FunctionContext &ctx);
	void getPCItemLastEquipped(Aurora::NWScript::FunctionContext &ctx);
	void getPCItemLastEquippedBy(Aurora::NWScript::FunctionContext &ctx);
	void getPCItemLastUnequipped(Aurora::NWScript::FunctionContext &ctx);
	void getPCItemLastUnequippedBy(Aurora::NWScript::FunctionContext &ctx);
	void copyItemAndModify(Aurora::NWScript::FunctionContext &ctx);
	void getItemAppearance(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyOnHitCastSpell(Aurora::NWScript::FunctionContext &ctx);
	void getItemPropertySubType(Aurora::NWScript::FunctionContext &ctx);
	void getActionMode(Aurora::NWScript::FunctionContext &ctx);
	void setActionMode(Aurora::NWScript::FunctionContext &ctx);
	void getArcaneSpellFailure(Aurora::NWScript::FunctionContext &ctx);
	void actionExamine(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyVisualEffect(Aurora::NWScript::FunctionContext &ctx);
	void setLootable(Aurora::NWScript::FunctionContext &ctx);
	void getLootable(Aurora::NWScript::FunctionContext &ctx);
	void getCutsceneCameraMoveRate(Aurora::NWScript::FunctionContext &ctx);
	void setCutsceneCameraMoveRate(Aurora::NWScript::FunctionContext &ctx);
	void getItemCursedFlag(Aurora::NWScript::FunctionContext &ctx);
	void setItemCursedFlag(Aurora::NWScript::FunctionContext &ctx);
	void setMaxHenchmen(Aurora::NWScript::FunctionContext &ctx);
	void getMaxHenchmen(Aurora::NWScript::FunctionContext &ctx);
	void getAssociateType(Aurora::NWScript::FunctionContext &ctx);
	void getSpellResistance(Aurora::NWScript::FunctionContext &ctx);
	void dayToNight(Aurora::NWScript::FunctionContext &ctx);
	void nightToDay(Aurora::NWScript::FunctionContext &ctx);
	void lineOfSightObject(Aurora::NWScript::FunctionContext &ctx);
	void lineOfSightVector(Aurora::NWScript::FunctionContext &ctx);
	void getLastSpellCastClass(Aurora::NWScript::FunctionContext &ctx);
	void setBaseAttackBonus(Aurora::NWScript::FunctionContext &ctx);
	void restoreBaseAttackBonus(Aurora::NWScript::FunctionContext &ctx);
	void effectCutsceneGhost(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyArcaneSpellFailure(Aurora::NWScript::FunctionContext &ctx);
	void getStoreGold(Aurora::NWScript::FunctionContext &ctx);
	void setStoreGold(Aurora::NWScript::FunctionContext &ctx);
	void getStoreMaxBuyPrice(Aurora::NWScript::FunctionContext &ctx);
	void setStoreMaxBuyPrice(Aurora::NWScript::FunctionContext &ctx);
	void getStoreIdentifyCost(Aurora::NWScript::FunctionContext &ctx);
	void setStoreIdentifyCost(Aurora::NWScript::FunctionContext &ctx);
	void setCreatureAppearanceType(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureStartingPackage(Aurora::NWScript::FunctionContext &ctx);
	void effectCutsceneImmobilize(Aurora::NWScript::FunctionContext &ctx);
	void getIsInSubArea(Aurora::NWScript::FunctionContext &ctx);
	void getItemPropertyCostTable(Aurora::NWScript::FunctionContext &ctx);
	void getItemPropertyCostTableValue(Aurora::NWScript::FunctionContext &ctx);
	void getItemPropertyParam1(Aurora::NWScript::FunctionContext &ctx);
	void getItemPropertyParam1Value(Aurora::NWScript::FunctionContext &ctx);
	void getIsCreatureDisarmable(Aurora::NWScript::FunctionContext &ctx);
	void setStolenFlag(Aurora::NWScript::FunctionContext &ctx);
	void forceRest(Aurora::NWScript::FunctionContext &ctx);
	void setCameraHeight(Aurora::NWScript::FunctionContext &ctx);
	void setSkyBox(Aurora::NWScript::FunctionContext &ctx);
	void getPhenoType(Aurora::NWScript::FunctionContext &ctx);
	void setPhenoType(Aurora::NWScript::FunctionContext &ctx);
	void setFogColor(Aurora::NWScript::FunctionContext &ctx);
	void getCutsceneMode(Aurora::NWScript::FunctionContext &ctx);
	void getSkyBox(Aurora::NWScript::FunctionContext &ctx);
	void getFogColor(Aurora::NWScript::FunctionContext &ctx);
	void setFogAmount(Aurora::NWScript::FunctionContext &ctx);
	void getFogAmount(Aurora::NWScript::FunctionContext &ctx);
	void getPickpocketableFlag(Aurora::NWScript::FunctionContext &ctx);
	void setPickpocketableFlag(Aurora::NWScript::FunctionContext &ctx);
	void getFootstepType(Aurora::NWScript::FunctionContext &ctx);
	void setFootstepType(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureWingType(Aurora::NWScript::FunctionContext &ctx);
	void setCreatureWingType(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureBodyPart(Aurora::NWScript::FunctionContext &ctx);
	void setCreatureBodyPart(Aurora::NWScript::FunctionContext &ctx);
	void getCreatureTailType(Aurora::NWScript::FunctionContext &ctx);
	void setCreatureTailType(Aurora::NWScript::FunctionContext &ctx);
	void getHardness(Aurora::NWScript::FunctionContext &ctx);
	void setHardness(Aurora::NWScript::FunctionContext &ctx);
	void setLockKeyRequired(Aurora::NWScript::FunctionContext &ctx);
	void setLockKeyTag(Aurora::NWScript::FunctionContext &ctx);
	void setLockLockable(Aurora::NWScript::FunctionContext &ctx);
	void setLockUnlockDC(Aurora::NWScript::FunctionContext &ctx);
	void setLockLockDC(Aurora::NWScript::FunctionContext &ctx);
	void setTrapDisarmable(Aurora::NWScript::FunctionContext &ctx);
	void setTrapDetectable(Aurora::NWScript::FunctionContext &ctx);
	void setTrapOneShot(Aurora::NWScript::FunctionContext &ctx);
	void setTrapKeyTag(Aurora::NWScript::FunctionContext &ctx);
	void setTrapDisarmDC(Aurora::NWScript::FunctionContext &ctx);
	void setTrapDetectDC(Aurora::NWScript::FunctionContext &ctx);
	void createTrapAtLocation(Aurora::NWScript::FunctionContext &ctx);
	void createTrapOnObject(Aurora::NWScript::FunctionContext &ctx);
	void setWillSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void setReflexSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void setFortitudeSavingThrow(Aurora::NWScript::FunctionContext &ctx);
	void getTilesetResRef(Aurora::NWScript::FunctionContext &ctx);
	void getTrapRecoverable(Aurora::NWScript::FunctionContext &ctx);
	void setTrapRecoverable(Aurora::NWScript::FunctionContext &ctx);
	void getModuleXPScale(Aurora::NWScript::FunctionContext &ctx);
	void setModuleXPScale(Aurora::NWScript::FunctionContext &ctx);
	void getKeyRequiredFeedback(Aurora::NWScript::FunctionContext &ctx);
	void setKeyRequiredFeedback(Aurora::NWScript::FunctionContext &ctx);
	void getTrapActive(Aurora::NWScript::FunctionContext &ctx);
	void setTrapActive(Aurora::NWScript::FunctionContext &ctx);
	void lockCameraPitch(Aurora::NWScript::FunctionContext &ctx);
	void lockCameraDistance(Aurora::NWScript::FunctionContext &ctx);
	void lockCameraDirection(Aurora::NWScript::FunctionContext &ctx);
	void getPlaceableLastClickedBy(Aurora::NWScript::FunctionContext &ctx);
	void getInfiniteFlag(Aurora::NWScript::FunctionContext &ctx);
	void setInfiniteFlag(Aurora::NWScript::FunctionContext &ctx);
	void getAreaSize(Aurora::NWScript::FunctionContext &ctx);
	void setName(Aurora::NWScript::FunctionContext &ctx);
	void getPortraitId(Aurora::NWScript::FunctionContext &ctx);
	void setPortraitId(Aurora::NWScript::FunctionContext &ctx);
	void getPortraitResRef(Aurora::NWScript::FunctionContext &ctx);
	void setPortraitResRef(Aurora::NWScript::FunctionContext &ctx);
	void setUseableFlag(Aurora::NWScript::FunctionContext &ctx);
	void getDescription(Aurora::NWScript::FunctionContext &ctx);
	void setDescription(Aurora::NWScript::FunctionContext &ctx);
	void getPCChatSpeaker(Aurora::NWScript::FunctionContext &ctx);
	void getPCChatMessage(Aurora::NWScript::FunctionContext &ctx);
	void getPCChatVolume(Aurora::NWScript::FunctionContext &ctx);
	void setPCChatMessage(Aurora::NWScript::FunctionContext &ctx);
	void setPCChatVolume(Aurora::NWScript::FunctionContext &ctx);
	void getColor(Aurora::NWScript::FunctionContext &ctx);
	void setColor(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyMaterial(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyQuality(Aurora::NWScript::FunctionContext &ctx);
	void itemPropertyAdditional(Aurora::NWScript::FunctionContext &ctx);
};

} // End of namespace NWN

} // End of namespace Engines

#endif // ENGINES_NWN_SCRIPT_FUNCTIONS_H
